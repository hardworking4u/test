{"version":3,"sources":["NiceLotteryContainer.js","App.js","reportWebVitals.js","index.js"],"names":["RowItem","key","this","props","content","toolTip","activedId","console","log","className","id","style","background","Component","IntegerStep","state","inputValue","numberValue","onChange","value","getState","setState","toFixed","span","min","max","margin","disabled","React","NineLottery","showModal","isModalVisible","handleOk","handleCancel","handleIntegerStepState","childState","thatArray","beginIdx","Math","floor","random","i","activePrizeCount","numList","list","prizeId","thatKey","times","actTimes","isRolling","niceList","badList","axios","get","then","response","data","handlePlay","prizeIndex","prize","length","name","getThePrize","begin","setInterval","num","clearInterval","setTimeout","title","visible","onOk","okText","cancelText","onCancel","status","offset","extra","href","width","onClick","handleBegin","fontSize","marginLeft","marginTop","active","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aceb0463.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport {Card, Col, Modal, Result, Row, Skeleton} from \"antd\";\nimport 'antd/dist/antd.css';\nimport axios from \"axios\"\nimport Slider from \"antd/es/slider\";\nimport InputNumber from \"antd/es/input-number\";\n\n// ItemÁªÑ‰ª∂--ÊâÄÊúâÊ†ºÂ≠êÁöÑÊìç‰ΩúÈÉΩÂèØ‰ª•Âú®Ê≠§ËøõË°åÔºåÂ¶ÇÊûúËøô‰∫õÊìç‰ΩúÈÉΩËÉΩ‰∏é\"activedId\"ÂÖ≥ËÅîÂ∞±Êõ¥Â•Ω‰∫Ü\nclass RowItem extends Component {\n\n    getTheResult(key) {\n        if (key / 3 === 0) {\n            return\n        } else {\n            return 'Â•ñÂä±1'\n        }\n    }\n\n    render() {\n        const {content, toolTip, activedId} = this.props;\n        console.log('ÂÜÖÂÆπ' + content)\n        return (\n            <div>\n                <Row>\n                    <Col>\n                        <div className={activedId === content ? 'row__item row__item-active' : 'row__item'}\n                             id={`row_item_${content}`}>\n                            {!toolTip &&\n                            <span>üí•<span style={{background: 'rgba(148,57,136,0.28)'}}>\n                                ÊÉ©ÁΩö\n                            </span></span>\n                            }\n                            {toolTip &&\n                            <span> üéâ<span style={{background: 'rgba(57,148,122,0.28)'}}>\n                                ‰∏≠Â•ñ\n                                </span></span>\n                            }\n                        </div>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nclass IntegerStep extends React.Component {\n    state = {\n        inputValue: 9,\n        numberValue: 100\n    };\n\n    onChange = value => {\n        this.props.getState(value);\n        this.setState({\n            inputValue: value,\n            numberValue: (value * 100 / 9).toFixed(0)\n        });\n    };\n\n\n    render() {\n        const {inputValue, numberValue} = this.state;\n        return (\n            <Row>\n                <Col span={12}>\n                    <Slider\n                        min={0}\n                        max={9}\n                        onChange={this.onChange}\n                        value={typeof inputValue === 'number' ? inputValue : 0}\n                    />\n                </Col>\n                <Col span={12}>\n                    ‰∏≠Â•ñÊ¶ÇÁéá‰∏∫:\n                    <InputNumber\n                        min={0}\n                        max={100}\n                        style={{margin: '0 16px'}}\n                        value={numberValue}\n                        onChange={this.onChange}\n                        disabled\n                    />%\n                </Col>\n            </Row>\n        );\n    }\n}\n\nclass NineLottery extends Component {\n    constructor() {\n        super()\n        this.state = {\n            // ‰πùÂÆ´Ê†ºÂÜÖÂÆπlist\n            list: [0, 1, 2, 3, 4, 5, 6, 7, 8],\n            numList: [true, true, true, true, true, true, true, true, true],\n            // Ë¢´ÈÄâ‰∏≠ÁöÑÊ†ºÂ≠êÁöÑID\n            activedId: '',\n            activePrizeCount: 0,\n            // ‰∏≠Â•ñID\n            prizeId: null,\n            thatKey: '',\n            // Ëé∑ÂæóprizeId‰πãÂêéËÆ°ÁÆóÂá∫ÁöÑÂä®ÁîªÊ¨°Êï∞\n            times: 0,\n            // ÂΩìÂâçÂä®ÁîªÊ¨°Êï∞\n            actTimes: 0,\n            // ÊòØÂê¶Ê≠£Âú®ÊäΩÂ•ñ\n            isRolling: false,\n            isModalVisible: false,\n            niceList: [],\n            badList: []\n        }\n    }\n\n    componentDidMount() {\n        console.log('ËøõÂÖ•componentDidMount')\n        axios.get('./assets/js/Â•ñÂä±.json').then((response) => {\n            this.setState({niceList: response.data})\n        })\n        axios.get('./assets/js/ÊÉ©ÁΩö.json').then((response) => {\n            this.setState({badList: response.data})\n        })\n    }\n\n    showModal = () => {\n        this.setState({isModalVisible: true})\n    };\n\n    handleOk = () => {\n        this.setState({isModalVisible: false})\n    };\n\n    handleCancel = () => {\n        this.setState({isModalVisible: false})\n    };\n\n    handleBegin() {\n        console.log('thatkey')\n        console.log(this.state.badList)\n        // this.state.isRolling‰∏∫falseÁöÑÊó∂ÂÄôÊâçËÉΩÂºÄÂßãÊäΩÔºå‰∏çÁÑ∂‰ºöÈáçÂ§çÊäΩÂèñÔºåÈÄ†ÊàêÊó†Ê≥ïÈ¢ÑÁü•ÁöÑÂêéÊûú\n        if (!this.state.isRolling) {\n            // ÁÇπÂáªÊäΩÂ•ñ‰πãÂêéÔºåÊàë‰∏™‰∫∫ÂÅöÊ≥ïÊòØÂ∞Ü‰∫é‰πùÂÆ´Ê†ºÊúâÂÖ≥ÁöÑÁä∂ÊÄÅÈÉΩËøòÂéüÈªòËÆ§\n            this.setState({\n                activedId: '',\n                prizeId: null,\n                times: 0,\n                actTimes: 0,\n                isRolling: true\n            }, () => {\n                // Áä∂ÊÄÅËøòÂéü‰πãÂêéÊâçËÉΩÂºÄÂßãÁúüÊ≠£ÁöÑÊäΩÂ•ñ\n                this.handlePlay()\n            })\n        }\n    }\n\n    getThePrize(prizeIndex) {\n        console.log('index:' + prizeIndex)\n        let activeSelect = this.state.numList[prizeIndex]\n        if (activeSelect) {\n            let prize = Math.floor(Math.random() * (this.state.niceList.length));\n            return 'ÊÅ≠ÂñúüéâÔºõËé∑Âæó‰∫Ü' + this.state.niceList[prize].name\n        } else {\n            let prize = Math.floor(Math.random() * (this.state.badList.length));\n            return 'Á≥üÁ≥ïüò¢ÔºõÊäΩ‰∏≠‰∫Ü' + this.state.badList[prize].name\n        }\n    }\n\n    handlePlay() {\n        // ÈöèÊú∫Ëé∑Âèñ‰∏Ä‰∏™‰∏≠Â•ñID\n        let prize = Math.floor(Math.random() * 9)\n        console.log('ÊäΩÂà∞Â•ñÂìÅÁöÑ‰ΩçÁΩÆ‰∏∫' + prize)\n\n        this.setState({\n            prizeId: prize,\n            thatKey: this.getThePrize(prize),\n            activedId: 0\n        })\n        // ÈöèÊú∫ÁÆóÂá∫‰∏Ä‰∏™Âä®ÁîªÊâßË°åÁöÑÊúÄÂ∞èÊ¨°Êï∞ÔºåËøôÈáåÂèØ‰ª•ÈöèÊú∫ÂèòÊõ¥Êï∞ÂÄºÔºåÊåâËá™Â∑±ÁöÑÈúÄÊ±ÇÊù•\n        let times = this.state.list.length * Math.floor(Math.random() * 5 + 4)\n        this.setState({\n            times: times\n        })\n        // ÊäΩÂ•ñÊ≠£ÂºèÂºÄÂßã‚Üì‚Üì\n        this.begin = setInterval(() => {\n            let num;\n\n            if (this.state.activedId === this.state.prizeId && this.state.actTimes > this.state.times) {\n                // Á¨¶Âêà‰∏äËø∞ÊâÄÊúâÊù°‰ª∂Êó∂ÊâçÊòØ‰∏≠Â•ñÁöÑÊó∂ÂÄôÔºå‰∏§‰∏™IDÁõ∏ÂêåÂπ∂‰∏îÂä®ÁîªÊâßË°åÁöÑÊ¨°Êï∞Â§ß‰∫é(ÊàñÁ≠â‰∫é‰πüË°å)ËÆæÂÆöÁöÑÊúÄÂ∞èÊ¨°Êï∞\n                clearInterval(this.begin)\n                setTimeout(() => {\n                    this.setState({\n                        isRolling: false,\n                        isModalVisible: true\n                    })\n                }, 300)\n                return\n            }\n\n            // ‰ª•‰∏ãÊòØÂä®ÁîªÊâßË°åÊó∂ÂØπidÁöÑÂà§Êñ≠\n            if (this.state.activedId === '') {\n                num = 0\n                this.setState({\n                    activedId: num\n                })\n            } else {\n                num = this.state.activedId\n                if (num === 8) {\n                    num = 0\n                    this.setState({\n                        activedId: num\n                    })\n                } else {\n                    num = num + 1\n                    this.setState({\n                        activedId: num\n                    })\n                }\n            }\n\n            this.setState({\n                actTimes: this.state.actTimes + 1\n            })\n\n        }, 50)\n    }\n\n    handleIntegerStepState = (childState) => {\n        console.log(childState)\n        let thatArray = [true, true, true, true, true, true, true, true, true]\n        let beginIdx = Math.floor(Math.random() * 100) % 9\n        console.log('beginIdx' + beginIdx)\n        for (let i = 0; i < childState; i++) {\n            thatArray[(i + beginIdx) % 9] = false\n        }\n        // ÂèØ‰ª•Âú®ËøôÈáåÂà∑Êñ∞Â≠êItemÁöÑÂÄº\n        this.setState({activePrizeCount: childState, numList: thatArray})\n    }\n\n    render() {\n        const {list, activedId, numList} = this.state;\n        return (\n            <div className=\"App\">\n                <br/>\n                <br/>\n                <br/>\n                <Modal title=\"ÊäΩÂ•ñÁªìÊûú\" visible={this.state.isModalVisible} onOk={this.handleOk}\n                       okText=\"Á°ÆËÆ§\"\n                       cancelText=\"ÂÖ≥Èó≠\"\n                       onCancel={this.handleCancel}>\n                    <div>\n                        <Result\n                            status=\"success\"\n                            title={this.state.thatKey}\n                        />\n                    </div>\n                </Modal>\n                <Row>\n                    <Col offset={5} span={6}>\n                        <Card title=\"‰πùÂÆ´Ê†ºÊäΩÂ•ñ\" extra={<a href=\"#\">x</a>} style={{width: '100%'}}>\n                            <div className=\"prize\">\n                                <div className=\"prize__container\">\n                                    <div className=\"container__area\">\n                                        <div className=\"begin__btn\" onClick={() => this.handleBegin()}>\n                                            ÁÇπÂáªÂºÄÂßã\n                                        </div>\n                                        <div className=\"area__row\">\n                                            <RowItem content={list[0]} toolTip={numList[0]} activedId={activedId}/>\n                                            <RowItem content={list[1]} toolTip={numList[1]} activedId={activedId}/>\n                                            <RowItem content={list[2]} toolTip={numList[2]} activedId={activedId}/>\n                                        </div>\n                                        <div className=\"area__row\">\n                                            <RowItem content={list[7]} toolTip={numList[7]} activedId={activedId}/>\n                                            <RowItem content={list[3]} toolTip={numList[3]} activedId={activedId}/>\n                                        </div>\n                                        <div className=\"area__row\">\n                                            <RowItem content={list[6]} toolTip={numList[6]} activedId={activedId}/>\n                                            <RowItem content={list[5]} toolTip={numList[5]} activedId={activedId}/>\n                                            <RowItem content={list[4]} toolTip={numList[4]} activedId={activedId}/>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </Card>\n                    </Col>\n                    <Col span={8} offset={2}>\n                        <br/>\n                        <br/>\n                        <br/>\n                        <span style={{fontSize: 16, marginLeft: -400}}><b>ÊäΩÂ•ñËßÑÂàô:</b></span>\n                        <br/>\n                        <pre style={{marginTop: 20}}>1„ÄÅË∞ÉÊï¥‰∏≠Â•ñÊØî‰æãÔºåÈªòËÆ§100</pre>\n                        <pre>2„ÄÅÁÇπÂáª\"ÂºÄÂßãÊäΩÂ•ñ\"ÔºõÂ∞ÜÂºÄÂßãËΩÆËΩ¨Ôºå3ÁßíÂêéÂÅúÊ≠¢ÂºÄÂ•ñ</pre>\n                        <Skeleton active/>\n                        <br/>\n                        <IntegerStep getState={this.handleIntegerStepState}/>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default NineLottery;\n","import './App.css';\nimport React from \"react\";\nimport NineLottery from \"./NiceLotteryContainer\";\n\nfunction App() {\n\n    return (\n        <div>\n            <NineLottery/>\n        </div>\n        // <div>\n        //     <RedPacketPane/>\n        //     {/**/}\n        //     {/*<CircleLottery></CircleLottery>*/}\n        // </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}